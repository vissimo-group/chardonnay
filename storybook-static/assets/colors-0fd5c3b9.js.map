{"version":3,"file":"colors-0fd5c3b9.js","sources":["../../src/docs/Tokens/colors/colorsGrid.tsx","../../src/docs/Tokens/colors/colors.mdx"],"sourcesContent":["import { getContrast } from 'polished';\nimport colors from \"../../../tokens/colors\";\n\ninterface renderColorsProps  {\n    theme: 'light' | 'dark'\n}\n\ninterface renderColorShadesProps {\n    colorShades: Record<string, string>\n}\n\nexport function ColorsGrid() {\n    return (\n        <>\n            <h1>Light Theme</h1>\n            {renderColors('light')}\n\n            <h1>Dark Theme</h1>\n            {renderColors('dark')}\n        </>\n    );\n}\n\nfunction renderColors(theme: renderColorsProps) {\n    const themeColors = colors[theme];\n\n    return Object.entries(themeColors).map(([colorGroup, colorShades]) => (\n        <div  key={colorGroup}>\n            <h3 style={{ textAlign: 'center' }} >{colorGroup}</h3>\n            {renderColorShades(colorShades)}\n        </div>\n    ));\n}\n\nfunction renderColorShades(colorShades: renderColorShadesProps) {\n    return Object.entries(colorShades).map(([key, color]) => {\n        if (typeof color !== 'string') {\n            throw new Error(`Color '${key}' is not a valid string.`);\n        }\n\n        return (\n            <div\n                key={key}\n                style={{\n                    backgroundColor: color,\n                    padding: '1rem',\n                    marginBottom: '0.5rem',\n                }}\n            >\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        fontFamily: 'monospace',\n                        color: getContrast(color, '#FFF') < 3.5 ? '#000' : '#FFF',\n                    }}\n                >\n                    <strong>{key}</strong>\n                    <span>{color}</span>\n                </div>\n            </div>\n        );\n    });\n}","import { Meta } from '@storybook/blocks';\nimport {ColorsGrid} from \"./colorsGrid\";\n\n<Meta title=\"Tokens/Cores\" />\n\n# Cores\n\n## Essas s√£o as cores utilizadas\n\n<ColorsGrid />"],"names":["ColorsGrid","jsxs","Fragment","jsx","renderColors","theme","themeColors","colors","colorGroup","colorShades","renderColorShades","key","color","getContrast","_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout"],"mappings":"2eAWO,SAASA,GAAa,CACzB,OAEQC,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAAC,MAAG,SAAW,aAAA,CAAA,EACdC,EAAa,OAAO,EAErBD,EAAC,MAAG,SAAU,YAAA,CAAA,EACbC,EAAa,MAAM,CACxB,CAAA,CAAA,CAER,CAEA,SAASA,EAAaC,EAA0B,CACtC,MAAAC,EAAcC,EAAOF,CAAK,EAEzB,OAAA,OAAO,QAAQC,CAAW,EAAE,IAAI,CAAC,CAACE,EAAYC,CAAW,IAC5DR,EAAC,MACG,CAAA,SAAA,CAAAE,EAAC,MAAG,MAAO,CAAE,UAAW,UAAc,SAAWK,EAAA,EAChDE,EAAkBD,CAAW,CAAA,CAAA,EAFvBD,CAGX,CACH,CACL,CAEA,SAASE,EAAkBD,EAAqC,CACrD,OAAA,OAAO,QAAQA,CAAW,EAAE,IAAI,CAAC,CAACE,EAAKC,CAAK,IAAM,CACjD,GAAA,OAAOA,GAAU,SACjB,MAAM,IAAI,MAAM,UAAUD,CAAG,0BAA0B,EAIvD,OAAAR,EAAC,MAAA,CAEG,MAAO,CACH,gBAAiBS,EACjB,QAAS,OACT,aAAc,QAClB,EAEA,SAAAX,EAAC,MAAA,CACG,MAAO,CACH,QAAS,OACT,eAAgB,gBAChB,WAAY,YACZ,MAAOY,EAAYD,EAAO,MAAM,EAAI,IAAM,OAAS,MACvD,EAEA,SAAA,CAAAT,EAAC,UAAQ,SAAIQ,CAAA,CAAA,EACbR,EAAC,QAAM,SAAMS,CAAA,CAAA,CAAA,CAAA,CACjB,CAAA,EAjBKD,CAAA,CAkBT,CAEP,CACL,CC1DA,SAASG,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAOG,EAAMC,EAAW,CACtB,SAAU,CAACC,EAAKC,EAAM,CACpB,MAAO,cACR,CAAA,EAAG;AAAA,EAAMD,EAAKJ,EAAY,GAAI,CAC7B,GAAI,QACJ,SAAU,OACX,CAAA,EAAG;AAAA,EAAMI,EAAKJ,EAAY,GAAI,CAC7B,GAAI,gCACJ,SAAU,+BACX,CAAA,EAAG;AAAA,EAAMI,EAAKpB,EAAY,CAAE,CAAA,CAAC,CAClC,CAAG,CACH,CACA,SAASsB,EAAWP,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASQ,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEN,EAAoB,EAAEF,EAAM,UAAU,EACrF,OAAOQ,EAAYH,EAAKG,EAAW,OAAO,OAAO,CAAE,EAAER,EAAO,CAC1D,SAAUK,EAAKN,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAkBC,CAAK,CAC/B"}